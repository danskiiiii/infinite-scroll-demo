{"version":3,"sources":["actions.js","index.js"],"names":["_callee","title","idx","max","response","data","regenerator_default","a","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","t0","stop","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFetchBooks","onInit","arguments","length","undefined","start","state","reqestNumber","amount","payload","isLoading","objectSpread","hasMore","setState","_x","_x2","_x3","_getQueryResult","apply","getQueryResult","val","then","items","totalItems","prevState","toConsumableArray","catch","window","location","reload","renderBooks","_this$state","map","item","react_default","createElement","key","index_es","style","margin","component","height","src","volumeInfo","imageLinks","thumbnail","objectFit","variant","color","description","onscroll","_this$state2","error","innerHeight","document","documentElement","scrollTop","offsetHeight","_this2","_this$state3","Fragment","className","onKeyPress","ev","inpRef","blur","inputRef","node","autoComplete","label","value","onChange","e","target","alignSelf","onClick","align","React","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.29441336.chunk.js","sourcesContent":["/**\r\n * @param {string} title -- query text\r\n * @param {number} idx -- index of the first item (pagination)\r\n * @param {number} max -- maximum number of items accepted (pagination)\r\n * @returns {Object} -- an object with book details\r\n */\r\nexport async function getQueryResult(title, idx, max) {\r\n  const url = 'https://www.googleapis.com/books/v1/volumes';\r\n  try {\r\n    const response = await fetch(\r\n      `${url}?q=intitle:${title}&startIndex=${idx}&maxResults=${max}\r\n&fields=items(volumeInfo/description,volumeInfo/title,volumeInfo/imageLinks),totalItems`\r\n    );\r\n    const data = await response.json();\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n  CardActionArea,\n  CardContent,\n  Card,\n  Typography,\n  CardMedia,\n  Button,\n  LinearProgress,\n  TextField,\n} from '@material-ui/core';\nimport { getQueryResult } from './actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      hasMore: true,\n      reqestNumber: 1,\n      isLoading: false,\n      val: '',\n    };\n\n    window.onscroll = () => {\n      const { error, isLoading, hasMore } = this.state;\n\n      if (error || isLoading || !hasMore) return;\n\n      if (window.innerHeight + document.documentElement.scrollTop > document.documentElement.offsetHeight - 400) {\n        this.handleFetchBooks();\n      }\n    };\n  }\n\n  handleFetchBooks = (onInit = false) => {\n    const { reqestNumber } = this.state;\n    let start = 10 * reqestNumber;\n    let amount = 10;\n    let payload = { isLoading: true };\n    if (onInit) {\n      start = 0;\n      amount = 19;\n      payload = { ...payload, hasMore: true, data: [], reqestNumber: 1 };\n    }\n    this.setState({ ...payload }, () =>\n      getQueryResult(this.state.val, start, amount)\n        .then(response => {\n          const { items, totalItems } = response;\n          const { data } = this.state;\n\n          if (totalItems === 0) {\n            this.setState({ totalItems, isLoading: false });\n            return;\n          }\n\n          if (!items) {\n            this.setState({ isLoading: false, hasMore: false });\n            return;\n          }\n\n          const hasMore = items.length + data.length < totalItems;\n          this.setState(prevState => ({\n            data: items ? [...prevState.data, ...items] : prevState.data,\n            reqestNumber: prevState.reqestNumber + 1,\n            totalItems,\n            isLoading: false,\n            hasMore,\n          }));\n        })\n        .catch(() => window.location.reload())\n    );\n  };\n\n  renderBooks = () => {\n    const { data, totalItems } = this.state;\n    if (data.length)\n      return data.map((item, idx) => (\n        <div key={idx}>\n          <Card style={{ margin: 10 }}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                height=\"200\"\n                src={\n                  item.volumeInfo.imageLinks\n                    ? item.volumeInfo.imageLinks.thumbnail\n                    : 'https://www.lonestargrapefruit.com/images/images.jpg'\n                }\n                style={{ objectFit: 'contain' }}\n              />\n              <CardContent>\n                <Typography variant=\"title\">{item.volumeInfo.title}</Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {item.volumeInfo.description ? item.volumeInfo.description : 'No description provided.'}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </div>\n      ));\n\n    if (totalItems === 0) return <Typography color=\"error\">No books were found</Typography>;\n\n    return null;\n  };\n\n  render() {\n    const { isLoading, hasMore } = this.state;\n\n    return (\n      <React.Fragment>\n        <section>\n          <Typography color=\"textPrimary\" variant=\"h6\">\n            INFINITE SCROLL DEMO\n          </Typography>\n          <div className=\"search-bar\">\n            <TextField\n              onKeyPress={ev => {\n                if (ev.key === 'Enter') {\n                  this.inpRef.blur();\n                  this.handleFetchBooks(true);\n                }\n              }}\n              inputRef={node => (this.inpRef = node)}\n              autoComplete=\"off\"\n              label=\"Enter title\"\n              color=\"primary\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={this.state.val}\n              onChange={e => this.setState({ val: e.target.value })}\n            />\n            <Button\n              style={{ alignSelf: 'center', margin: '10px 0 0 8px' }}\n              color=\"primary\"\n              onClick={() => this.handleFetchBooks(true)}>\n              search\n            </Button>\n          </div>\n        </section>\n        <div className=\"cards\">\n          {this.renderBooks()}\n          {isLoading && <LinearProgress color=\"primary\" />}\n          {!hasMore && (\n            <Typography style={{ margin: 50 }} color=\"textPrimary\" align=\"center\" variant=\"h5\">\n              No more items\n            </Typography>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}